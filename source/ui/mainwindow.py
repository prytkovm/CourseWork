# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt6 UI code generator 6.2.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QSizePolicy, QLabel


class MainWindowUI:

    def setupUi(self, MainWindow):
        # Main window properties
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1248, 621)
        # central widget configuration
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        self.tableWidget.setObjectName("tableWidget")
        self.verticalLayout.addWidget(self.tableWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        # menu bar creating and setting up
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1248, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuTasks = QtWidgets.QMenu(self.menubar)
        self.menuTasks.setObjectName("menuTasks")
        MainWindow.setMenuBar(self.menubar)
        # status bar creating and setting up
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)
        self.toolBar.setMouseTracking(False)
        self.toolBar.setMovable(False)
        self.toolBar.setAllowedAreas(QtCore.Qt.ToolBarArea.AllToolBarAreas)
        self.toolBar.setObjectName("toolBar")
        self.spacer = QtWidgets.QWidget()
        self.spacer.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        self.toolBar.addWidget(self.spacer)
        MainWindow.addToolBar(QtCore.Qt.ToolBarArea.TopToolBarArea, self.toolBar)
        # configure icons and actions for 'start', 'end' and 'settings' buttons
        # start button conf
        start_icon = QtGui.QIcon()
        start_disabled_icon = QtGui.QIcon()
        start_icon.addPixmap(QtGui.QPixmap("ui\\icons\\start.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        start_disabled_icon.addPixmap(QtGui.QPixmap("ui\\icons\\start_disabled.png"), QtGui.QIcon.Mode.Disabled, QtGui.QIcon.State.Off)
        self.actionStartParsing = QtGui.QAction(MainWindow)
        self.actionStartParsing.setIcon(start_icon)
        self.actionStartParsing.setObjectName("actionStartParsing")
        # stop button conf
        stop_icon = QtGui.QIcon()
        stop_disabled_icon = QtGui.QIcon()
        stop_icon.addPixmap(QtGui.QPixmap("ui\\icons\\stop.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        stop_disabled_icon.addPixmap(QtGui.QPixmap("ui\\icons\\stop_disabled.png"), QtGui.QIcon.Mode.Disabled, QtGui.QIcon.State.Off)
        self.actionStopParsing = QtGui.QAction(MainWindow)
        self.actionStopParsing.setIcon(stop_icon)
        self.actionStopParsing.setEnabled(False)
        self.actionStopParsing.setObjectName("actionStopParsing")
        # settings button conf
        self.actionOpenSettings = QtGui.QAction(MainWindow)
        settings_icon = QtGui.QIcon()
        settings_icon.addPixmap(QtGui.QPixmap("ui\\icons\\settings.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.actionOpenSettings.setIcon(settings_icon)
        self.actionOpenSettings.setObjectName("actionOpenSettings")
        # add configured actions to toolbar
        self.toolBar.addAction(self.actionStartParsing)
        self.toolBar.addAction(self.actionStopParsing)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOpenSettings)
        # config for actions in menu bar
        self.actionOpenFile = QtGui.QAction(MainWindow)
        self.actionOpenFile.setObjectName("actionOpenFile")
        self.actionCreateNewParsingTask = QtGui.QAction(MainWindow)
        self.actionCreateNewParsingTask.setObjectName("actionCreateNewParsingTask")
        self.actionManageExistingTasks = QtGui.QAction(MainWindow)
        self.actionManageExistingTasks.setObjectName("actionManageExistingTasks")
        self.actionExport = QtGui.QAction(MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.menuFile.addAction(self.actionOpenFile)
        self.menuFile.addAction(self.actionExport)
        self.menuTasks.addAction(self.actionCreateNewParsingTask)
        self.menuTasks.addAction(self.actionManageExistingTasks)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTasks.menuAction())
        # add loading logo and label for it output
        self.movie = QtGui.QMovie('ui\\icons\\loading_logo.gif')
        self.label = QLabel()
        self.label.setMovie(self.movie)
        self.verticalLayout.addWidget(self.label)
        self.label.setEnabled(False)
        self.tableWidget.setVisible(False)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        # retranslate UI
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # here must be slots connection

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuTasks.setTitle(_translate("MainWindow", "Tasks"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionStartParsing.setText(_translate("MainWindow", "Start Parsing"))
        self.actionStopParsing.setText(_translate("MainWindow", "Stop Parsing"))
        self.actionOpenSettings.setText(_translate("MainWindow", "Open Settings"))
        self.actionOpenSettings.setToolTip(_translate("MainWindow", "Open Settings"))
        self.actionOpenSettings.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionOpenFile.setText(_translate("MainWindow", "Open"))
        self.actionCreateNewParsingTask.setText(_translate("MainWindow", "Create new parsing task"))
        self.actionManageExistingTasks.setText(_translate("MainWindow", "Manage existing tasks"))
        self.actionExport.setText(_translate("MainWindow", "Export"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = MainWindowUI()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec())
